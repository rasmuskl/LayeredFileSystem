name: Release

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to create releases
    
    steps:
    - name: Check for required secrets
      run: |
        if [ -z "${{ secrets.NUGET_API_KEY }}" ]; then
          echo "❌ NUGET_API_KEY secret is not set"
          echo "Go to Settings → Secrets and variables → Actions → New repository secret"
          echo "Add NUGET_API_KEY with your NuGet.org API key"
          exit 1
        fi
        echo "✅ Required secrets are available"
        
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # GitTreeVersion needs full git history
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Install GitTreeVersion
      run: dotnet tool update --global GitTreeVersion
        
    - name: Apply GitTreeVersion
      run: gtv version --apply
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal
      
    - name: Pack
      run: dotnet pack LayeredFileSystem.Core/LayeredFileSystem.Core.csproj --no-build --configuration Release --output ./artifacts
      
    - name: Push to NuGet
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      
    - name: Get version for release
      id: release_version
      run: |
        if [ "${{ github.event_name }}" = "push" ] && [ "${{ startsWith(github.ref, 'refs/tags/') }}" = "true" ]; then
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          VERSION=$(find ./artifacts -name "*.nupkg" | head -1 | sed 's/.*LayeredFileSystem.Core.\(.*\)\.nupkg/\1/')
          echo "VERSION=v${VERSION}" >> $GITHUB_OUTPUT
        fi
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.release_version.outputs.VERSION }}
        files: ./artifacts/*.nupkg
        generate_release_notes: true
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}